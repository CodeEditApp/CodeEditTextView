{"metadata":{"role":"symbol","title":"layoutLines(in:)","extendedModule":"CodeEditTextView","modules":[{"name":"CodeEditTextView"}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"layoutLines"},{"text":"(","kind":"text"},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@T@NSRect","text":"NSRect","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:16CodeEditTextView0C4LineC","text":"TextLine","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"ID","preciseIdentifier":"s:16CodeEditTextView0C4LineC2IDa","kind":"typeIdentifier"},{"text":">","kind":"text"}],"externalID":"s:16CodeEditTextView0C13LayoutManagerC11layoutLines2inShy10Foundation4UUIDVGSo6CGRectVSg_tF","symbolKind":"method"},"abstract":[{"text":"Lays out all visible lines","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/codeedittextview\/textlayoutmanager\/layoutlines(in:)"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView","doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView\/TextLayoutManager"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"layoutLines","kind":"identifier"},{"text":"(","kind":"text"},{"text":"in","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"rect"},{"kind":"text","text":": "},{"text":"NSRect","preciseIdentifier":"c:@T@NSRect","kind":"typeIdentifier"},{"kind":"text","text":"? = nil) -> "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","identifier":"doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView\/TextLine","text":"TextLine","preciseIdentifier":"s:16CodeEditTextView0C4LineC"},{"text":".","kind":"text"},{"text":"ID","kind":"typeIdentifier","preciseIdentifier":"s:16CodeEditTextView0C4LineC2IDa"},{"text":">","kind":"text"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Overview Of The Layout Routine","level":2,"anchor":"Overview-Of-The-Layout-Routine","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The basic premise of this method is that it loops over all lines in the given rect (defaults to the visible"},{"text":" ","type":"text"},{"text":"rect), checks if the line needs a layout calculation, and performs layout on the line if it does.","type":"text"}]},{"inlineContent":[{"type":"text","text":"The thing that makes this layout method so fast is the second point, checking if a line needs layout. To"},{"text":" ","type":"text"},{"type":"text","text":"determine if a line needs a layout pass, the layout manager can check three things:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"1","type":"text"}]},{"type":"text","text":" Was the line laid out under the assumption of a different maximum layout width?"},{"type":"text","text":" "},{"text":"For instance, if a line was previously broken by the line wrapping setting, it won’t need to wrap once the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"line wrapping is disabled. This will detect that, and cause the lines to be recalculated."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2"}]},{"type":"text","text":" Was the line previously not visible? This is determined by keeping a set of visible line IDs. If the"},{"text":" ","type":"text"},{"type":"text","text":"line does not appear in that set, we can assume it was previously off screen and may need layout."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"3"}],"type":"strong"},{"text":" Was the line entirely laid out? We break up lines into line fragments. When we do layout, we determine","type":"text"},{"text":" ","type":"text"},{"text":"all line fragments but don’t necessarily place them all in the view. This checks if all line fragments have","type":"text"},{"text":" ","type":"text"},{"text":"been placed in the view. If not, we need to place them.","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"Once it has been determined that a line needs layout, we perform layout by recalculating it’s line fragments,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"removing all old line fragment views, and creating new ones for the line."}]},{"text":"Laziness","type":"heading","level":2,"anchor":"Laziness"},{"inlineContent":[{"type":"text","text":"At the end of the layout pass, we clean up any old lines by updating the set of visible line IDs and fragment"},{"type":"text","text":" "},{"text":"IDs. Any IDs that no longer appear in those sets are removed to save resources. This facilitates the text view’s","type":"text"},{"type":"text","text":" "},{"type":"text","text":"ability to only render text that is visible and saves tons of resources (similar to the lazy loading of"},{"type":"text","text":" "},{"type":"text","text":"collection or table views)."}],"type":"paragraph"},{"inlineContent":[{"text":"The other important lazy attribute is the line iteration. Line iteration is done lazily. As we iterate","type":"text"},{"type":"text","text":" "},{"text":"through lines and potentially update their heights, the next line is only queried for ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"after"}]},{"text":" the updates are","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"finished."}],"type":"paragraph"},{"anchor":"Reentry","text":"Reentry","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An important thing to note is that this method cannot be reentered. If a layout pass has begun while a layout"},{"type":"text","text":" "},{"text":"pass is already ongoing, internal data structures will be broken. In debug builds, this is checked with a simple","type":"text"},{"text":" ","type":"text"},{"text":"boolean and assertion.","type":"text"}]},{"inlineContent":[{"type":"text","text":"To help ensure this property, all view modifications are performed within a "},{"type":"codeVoice","code":"CATransaction"},{"text":". This guarantees","type":"text"},{"text":" ","type":"text"},{"text":"that macOS calls ","type":"text"},{"type":"codeVoice","code":"layout"},{"type":"text","text":" on any related views only after we’ve finished inserting and removing line fragment"},{"text":" ","type":"text"},{"type":"text","text":"views. Otherwise, inserting a line fragment view could trigger a layout pass prematurely and cause this method"},{"text":" ","type":"text"},{"text":"to re-enter.","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This is probably not what you’re looking for. If you need to invalidate layout, or update lines, this"},{"text":" ","type":"text"},{"type":"text","text":"is not the way to do so. This should only be called when macOS performs layout."}]}],"name":"Warning","type":"aside","style":"warning"}]}],"identifier":{"url":"doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView\/TextLayoutManager\/layoutLines(in:)","interfaceLanguage":"swift"},"sections":[],"references":{"doc://codeedittextview.CodeEditTextView/documentation/CodeEditTextView/TextLayoutManager":{"role":"symbol","identifier":"doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView\/TextLayoutManager","url":"\/documentation\/codeedittextview\/textlayoutmanager","title":"TextLayoutManager","navigatorTitle":[{"text":"TextLayoutManager","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"The text layout manager manages laying out lines in a code document."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"TextLayoutManager","kind":"identifier"}]},"doc://codeedittextview.CodeEditTextView/documentation/CodeEditTextView":{"role":"collection","url":"\/documentation\/codeedittextview","kind":"symbol","title":"CodeEditTextView","type":"topic","abstract":[{"type":"text","text":"A text editor designed to edit code documents."}],"identifier":"doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView"},"doc://codeedittextview.CodeEditTextView/documentation/CodeEditTextView/TextLine":{"identifier":"doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView\/TextLine","type":"topic","kind":"symbol","role":"symbol","title":"TextLine","abstract":[{"text":"Represents a displayable line of text.","type":"text"}],"url":"\/documentation\/codeedittextview\/textline","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TextLine"}],"navigatorTitle":[{"kind":"identifier","text":"TextLine"}]},"doc://codeedittextview.CodeEditTextView/documentation/CodeEditTextView/TextLayoutManager/layoutLines(in:)":{"identifier":"doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView\/TextLayoutManager\/layoutLines(in:)","type":"topic","title":"layoutLines(in:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"layoutLines","kind":"identifier"},{"kind":"text","text":"("},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NSRect","kind":"typeIdentifier","preciseIdentifier":"c:@T@NSRect"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:16CodeEditTextView0C4LineC","text":"TextLine","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"ID","preciseIdentifier":"s:16CodeEditTextView0C4LineC2IDa","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/codeedittextview\/textlayoutmanager\/layoutlines(in:)","abstract":[{"text":"Lays out all visible lines","type":"text"}]}}}