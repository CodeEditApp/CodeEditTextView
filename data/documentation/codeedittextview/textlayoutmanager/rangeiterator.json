{"hierarchy":{"paths":[["doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView","doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView\/TextLayoutManager"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/codeedittextview\/textlayoutmanager\/rangeiterator"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RangeIterator","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"inlineContent":[{"type":"text","text":"Next elements are retrieved lazily. Additionally, this iterator uses a stable "},{"code":"index","type":"codeVoice"},{"type":"text","text":" rather than a y position"},{"text":" ","type":"text"},{"text":"or a range to fetch the next line. This means the line storage can be updated during iteration.","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"This iterator iterates over “visible” text positions that overlap a document using"},{"type":"text","text":" "},{"identifier":"doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView\/TextLayoutManager\/determineVisiblePosition(for:)","type":"reference","isActive":true},{"text":".","type":"text"}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"RangeIterator"}],"modules":[{"name":"CodeEditTextView"}],"roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RangeIterator"}],"externalID":"s:16CodeEditTextView0C13LayoutManagerC13RangeIteratorV","symbolKind":"struct","title":"TextLayoutManager.RangeIterator","extendedModule":"CodeEditTextView","role":"symbol"},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView\/TextLayoutManager\/RangeIterator","interfaceLanguage":"swift"},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView\/TextLayoutManager\/RangeIterator\/next()"],"generated":true,"anchor":"Instance-Methods"},{"identifiers":["doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView\/TextLayoutManager\/RangeIterator\/LazySequenceProtocol-Implementations","doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView\/TextLayoutManager\/RangeIterator\/Sequence-Implementations"],"generated":true,"anchor":"Default-Implementations","title":"Default Implementations"}],"relationshipsSections":[{"identifiers":["doc:\/\/codeedittextview.CodeEditTextView\/St","doc:\/\/codeedittextview.CodeEditTextView\/s20LazySequenceProtocolP","doc:\/\/codeedittextview.CodeEditTextView\/ST"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"references":{"doc://codeedittextview.CodeEditTextView/documentation/CodeEditTextView/TextLayoutManager/RangeIterator/next()":{"title":"next()","identifier":"doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView\/TextLayoutManager\/RangeIterator\/next()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:16CodeEditTextView0C11LineStorageC","text":"TextLineStorage"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:16CodeEditTextView0C4LineC","text":"TextLine"},{"text":">.","kind":"text"},{"text":"TextLinePosition","preciseIdentifier":"s:16CodeEditTextView0C11LineStorageC0cE8PositionV","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Iterates over the “visible” text positions."}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/codeedittextview\/textlayoutmanager\/rangeiterator\/next()"},"doc://codeedittextview.CodeEditTextView/documentation/CodeEditTextView/TextLayoutManager":{"role":"symbol","identifier":"doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView\/TextLayoutManager","url":"\/documentation\/codeedittextview\/textlayoutmanager","title":"TextLayoutManager","navigatorTitle":[{"text":"TextLayoutManager","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"The text layout manager manages laying out lines in a code document."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"TextLayoutManager","kind":"identifier"}]},"doc://codeedittextview.CodeEditTextView/ST":{"title":"Swift.Sequence","type":"unresolvable","identifier":"doc:\/\/codeedittextview.CodeEditTextView\/ST"},"doc://codeedittextview.CodeEditTextView/documentation/CodeEditTextView/TextLayoutManager/RangeIterator":{"url":"\/documentation\/codeedittextview\/textlayoutmanager\/rangeiterator","title":"TextLayoutManager.RangeIterator","type":"topic","identifier":"doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView\/TextLayoutManager\/RangeIterator","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RangeIterator"}],"navigatorTitle":[{"text":"RangeIterator","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"This iterator iterates over “visible” text positions that overlap a document using"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView\/TextLayoutManager\/determineVisiblePosition(for:)","isActive":true},{"type":"text","text":"."}],"kind":"symbol"},"doc://codeedittextview.CodeEditTextView/documentation/CodeEditTextView/TextLayoutManager/determineVisiblePosition(for:)":{"role":"symbol","identifier":"doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView\/TextLayoutManager\/determineVisiblePosition(for:)","url":"\/documentation\/codeedittextview\/textlayoutmanager\/determinevisibleposition(for:)","title":"determineVisiblePosition(for:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Determines the “visible” line position by merging any consecutive lines"},{"type":"text","text":" "},{"text":"that are spanned by text attachments. If an attachment overlaps beyond the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"bounds of the original line, this method will extend the returned range to"},{"type":"text","text":" "},{"text":"cover the full span of those attachments (and recurse if further attachments","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"cross into newly included lines)."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"determineVisiblePosition","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"kind":"text","text":": "},{"text":"TextLineStorage","preciseIdentifier":"s:16CodeEditTextView0C11LineStorageC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"TextLine","kind":"typeIdentifier","preciseIdentifier":"s:16CodeEditTextView0C4LineC"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:16CodeEditTextView0C11LineStorageC0cE8PositionV","text":"TextLinePosition"},{"text":"?) -> (position","kind":"text"},{"text":": ","kind":"text"},{"text":"TextLineStorage","preciseIdentifier":"s:16CodeEditTextView0C11LineStorageC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:16CodeEditTextView0C4LineC","text":"TextLine","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:16CodeEditTextView0C11LineStorageC0cE8PositionV","text":"TextLinePosition","kind":"typeIdentifier"},{"kind":"text","text":", indexRange"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SN","kind":"typeIdentifier","text":"ClosedRange"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">)?"}]},"doc://codeedittextview.CodeEditTextView/s20LazySequenceProtocolP":{"title":"Swift.LazySequenceProtocol","type":"unresolvable","identifier":"doc:\/\/codeedittextview.CodeEditTextView\/s20LazySequenceProtocolP"},"doc://codeedittextview.CodeEditTextView/documentation/CodeEditTextView":{"role":"collection","url":"\/documentation\/codeedittextview","kind":"symbol","title":"CodeEditTextView","type":"topic","abstract":[{"type":"text","text":"A text editor designed to edit code documents."}],"identifier":"doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView"},"doc://codeedittextview.CodeEditTextView/documentation/CodeEditTextView/TextLayoutManager/RangeIterator/Sequence-Implementations":{"title":"Sequence Implementations","url":"\/documentation\/codeedittextview\/textlayoutmanager\/rangeiterator\/sequence-implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView\/TextLayoutManager\/RangeIterator\/Sequence-Implementations","abstract":[],"kind":"article"},"doc://codeedittextview.CodeEditTextView/St":{"title":"Swift.IteratorProtocol","identifier":"doc:\/\/codeedittextview.CodeEditTextView\/St","type":"unresolvable"},"doc://codeedittextview.CodeEditTextView/documentation/CodeEditTextView/TextLayoutManager/RangeIterator/LazySequenceProtocol-Implementations":{"abstract":[],"identifier":"doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView\/TextLayoutManager\/RangeIterator\/LazySequenceProtocol-Implementations","type":"topic","role":"collectionGroup","url":"\/documentation\/codeedittextview\/textlayoutmanager\/rangeiterator\/lazysequenceprotocol-implementations","kind":"article","title":"LazySequenceProtocol Implementations"}}}