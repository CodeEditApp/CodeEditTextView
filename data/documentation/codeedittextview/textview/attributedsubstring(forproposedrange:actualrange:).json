{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"attributedSubstring","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"forProposedRange"},{"kind":"text","text":" "},{"kind":"internalParam","text":"range"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@T@NSRange","text":"NSRange","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"actualRange"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@NSRangePointer","text":"NSRangePointer"},{"kind":"text","text":"?) -> "},{"text":"NSAttributedString","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSAttributedString"},{"text":"?","kind":"text"}],"platforms":["macOS"]}]},{"parameters":[{"name":"range","content":[{"inlineContent":[{"type":"text","text":"The range in the text storage from which to create the returned string."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The actual range of the returned string if it was adjusted, for example, to a grapheme cluster"},{"text":" ","type":"text"},{"text":"boundary or for performance or other reasons. NULL if range was not adjusted.","type":"text"}]}],"name":"actualRange"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"inlineContent":[{"type":"text","text":"The string created from the given range. May return nil."}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"An implementation of this method should be prepared for aRange to be out of bounds.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"For example, the InkWell text input service can ask for the contents of the text input client"},{"type":"text","text":" "},{"type":"text","text":"that extends beyond the document’s range. In this case, you should return the"},{"text":" ","type":"text"},{"type":"text","text":"intersection of the document’s range and aRange. If the location of aRange is completely outside of the"},{"type":"text","text":" "},{"text":"document’s range, return nil.","type":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/codeedittextview\/textview\/attributedsubstring(forproposedrange:actualrange:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView\/TextView\/attributedSubstring(forProposedRange:actualRange:)"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Returns an attributed string derived from the given range in the receiver’s text storage.","type":"text"}],"metadata":{"modules":[{"name":"CodeEditTextView"}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"attributedSubstring"},{"text":"(","kind":"text"},{"text":"forProposedRange","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"NSRange","preciseIdentifier":"c:@T@NSRange"},{"kind":"text","text":", "},{"text":"actualRange","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSRangePointer","preciseIdentifier":"c:@T@NSRangePointer"},{"kind":"text","text":"?) -> "},{"text":"NSAttributedString","preciseIdentifier":"c:objc(cs)NSAttributedString","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"externalID":"c:@CM@CodeEditTextView@objc(cs)TextView(im)attributedSubstringForProposedRange:actualRange:","symbolKind":"method","title":"attributedSubstring(forProposedRange:actualRange:)","extendedModule":"CodeEditTextView","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView","doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView\/TextView"]]},"references":{"doc://codeedittextview.CodeEditTextView/documentation/CodeEditTextView/TextView/attributedSubstring(forProposedRange:actualRange:)":{"identifier":"doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView\/TextView\/attributedSubstring(forProposedRange:actualRange:)","kind":"symbol","role":"symbol","url":"\/documentation\/codeedittextview\/textview\/attributedsubstring(forproposedrange:actualrange:)","title":"attributedSubstring(forProposedRange:actualRange:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"attributedSubstring"},{"kind":"text","text":"("},{"text":"forProposedRange","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@T@NSRange","text":"NSRange","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"actualRange"},{"text":": ","kind":"text"},{"text":"NSRangePointer","preciseIdentifier":"c:@T@NSRangePointer","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSAttributedString","text":"NSAttributedString"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Returns an attributed string derived from the given range in the receiver’s text storage."}]},"doc://codeedittextview.CodeEditTextView/documentation/CodeEditTextView/TextView":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TextView"}],"url":"\/documentation\/codeedittextview\/textview","kind":"symbol","identifier":"doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView\/TextView","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TextView","kind":"identifier"}],"abstract":[{"type":"text","text":"A view that draws and handles user interactions with text."},{"text":" ","type":"text"},{"type":"text","text":"Optimized for line-based documents, does not attempt to have feature parity with "},{"type":"codeVoice","code":"NSTextView"},{"type":"text","text":"."}],"title":"TextView"},"doc://codeedittextview.CodeEditTextView/documentation/CodeEditTextView":{"role":"collection","url":"\/documentation\/codeedittextview","kind":"symbol","title":"CodeEditTextView","type":"topic","abstract":[{"type":"text","text":"A text editor designed to edit code documents."}],"identifier":"doc:\/\/codeedittextview.CodeEditTextView\/documentation\/CodeEditTextView"}}}